Terminals unused in grammar

    '<'
    '>'


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: BLOCK

    2 BLOCK: '{' STATEMENT_LIST '}'

    3 STATEMENT_LIST: STATEMENT_LIST STATEMENT
    4               | ε

    5 STATEMENT: DECLARATION ';'
    6          | ASSIGNMENT ';'
    7          | PRINT ';'
    8          | IF_STATEMENT
    9          | WHILE_STATEMENT
   10          | BLOCK

   11 DECLARATION: TYPE IDENTIFIER
   12            | TYPE IDENTIFIER '=' EXPRESSION

   13 TYPE: PRIMITIVE_TYPES ARRAY_SPECIFIER

   14 ARRAY_SPECIFIER: '[' ']'
   15                | '[' EXPRESSION ']'
   16                | ε

   17 ASSIGNMENT: IDENTIFIER '=' EXPRESSION
   18           | IDENTIFIER '[' EXPRESSION ']' '=' EXPRESSION

   19 PRINT: PRINTF '(' EXPRESSION ')'

   20 IF_STATEMENT: IF '(' EXPRESSION ')' BLOCK
   21             | IF '(' EXPRESSION ')' BLOCK ELSE_CLAUSE

   22 ELSE_CLAUSE: ELSE BLOCK
   23            | ELSE IF_STATEMENT

   24 WHILE_STATEMENT: WHILE '(' EXPRESSION ')' BLOCK

   25 PRIMITIVE_TYPES: INT
   26                | FLOAT

   27 EXPRESSION: LOGICAL_OR

   28 LOGICAL_OR: LOGICAL_OR OR_OP LOGICAL_AND
   29           | LOGICAL_AND

   30 LOGICAL_AND: LOGICAL_AND AND_OP EQUALITY
   31            | EQUALITY

   32 EQUALITY: EQUALITY EQUAL_EQUAL RELATIONAL
   33         | EQUALITY NOT_EQUAL RELATIONAL
   34         | RELATIONAL

   35 RELATIONAL: RELATIONAL GREATER ADDITIVE
   36           | RELATIONAL LESS ADDITIVE
   37           | RELATIONAL GREATER_EQUAL ADDITIVE
   38           | RELATIONAL LESS_EQUAL ADDITIVE
   39           | ADDITIVE

   40 ADDITIVE: ADDITIVE '+' MULTIPLICATIVE
   41         | ADDITIVE '-' MULTIPLICATIVE
   42         | MULTIPLICATIVE

   43 MULTIPLICATIVE: MULTIPLICATIVE '*' UNARY
   44               | MULTIPLICATIVE '/' UNARY
   45               | MULTIPLICATIVE '%' UNARY
   46               | UNARY

   47 UNARY: '+' UNARY
   48      | '-' UNARY
   49      | NOT_OP UNARY
   50      | PRIMARY

   51 PRIMARY: IDENTIFIER
   52        | IDENTIFIER '[' EXPRESSION ']'
   53        | NUMBER
   54        | '(' EXPRESSION ')'

   55 NUMBER: INT_LITERAL
   56       | FLOAT_LITERAL


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 45
    '(' (40) 19 20 21 24 54
    ')' (41) 19 20 21 24 54
    '*' (42) 43
    '+' (43) 40 47
    '-' (45) 41 48
    '/' (47) 44
    ';' (59) 5 6 7
    '<' (60)
    '=' (61) 12 17 18
    '>' (62)
    '[' (91) 14 15 18 52
    ']' (93) 14 15 18 52
    '{' (123) 2
    '}' (125) 2
    error (256)
    IDENTIFIER <str> (258) 11 12 17 18 51 52
    INT <str> (259) 25
    FLOAT <str> (260) 26
    PRINTF <str> (261) 19
    IF (262) 20 21
    ELSE (263) 22 23
    WHILE (264) 24
    EQUAL_EQUAL (265) 32
    NOT_EQUAL (266) 33
    GREATER_EQUAL (267) 37
    LESS_EQUAL (268) 38
    GREATER (269) 35
    LESS (270) 36
    AND_OP (271) 30
    OR_OP (272) 28
    NOT_OP (273) 49
    INT_LITERAL <str> (274) 55
    FLOAT_LITERAL <str> (275) 56
    UMINUS (276)


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    PROGRAM <ast> (38)
        on left: 1
        on right: 0
    BLOCK <ast> (39)
        on left: 2
        on right: 1 10 20 21 22 24
    STATEMENT_LIST <ast> (40)
        on left: 3 4
        on right: 2 3
    STATEMENT <ast> (41)
        on left: 5 6 7 8 9 10
        on right: 3
    DECLARATION <ast> (42)
        on left: 11 12
        on right: 5
    TYPE <ast> (43)
        on left: 13
        on right: 11 12
    ARRAY_SPECIFIER <ast> (44)
        on left: 14 15 16
        on right: 13
    ASSIGNMENT <ast> (45)
        on left: 17 18
        on right: 6
    PRINT <ast> (46)
        on left: 19
        on right: 7
    IF_STATEMENT <ast> (47)
        on left: 20 21
        on right: 8 23
    ELSE_CLAUSE <ast> (48)
        on left: 22 23
        on right: 21
    WHILE_STATEMENT <ast> (49)
        on left: 24
        on right: 9
    PRIMITIVE_TYPES <str> (50)
        on left: 25 26
        on right: 13
    EXPRESSION <ast> (51)
        on left: 27
        on right: 12 15 17 18 19 20 21 24 52 54
    LOGICAL_OR <ast> (52)
        on left: 28 29
        on right: 27 28
    LOGICAL_AND <ast> (53)
        on left: 30 31
        on right: 28 29 30
    EQUALITY <ast> (54)
        on left: 32 33 34
        on right: 30 31 32 33
    RELATIONAL <ast> (55)
        on left: 35 36 37 38 39
        on right: 32 33 34 35 36 37 38
    ADDITIVE <ast> (56)
        on left: 40 41 42
        on right: 35 36 37 38 39 40 41
    MULTIPLICATIVE <ast> (57)
        on left: 43 44 45 46
        on right: 40 41 42 43 44 45
    UNARY <ast> (58)
        on left: 47 48 49 50
        on right: 43 44 45 46 47 48 49
    PRIMARY <ast> (59)
        on left: 51 52 53 54
        on right: 50
    NUMBER <ast> (60)
        on left: 55 56
        on right: 53


State 0

    0 $accept: • PROGRAM $end

    '{'  shift, and go to state 1

    PROGRAM  go to state 2
    BLOCK    go to state 3


State 1

    2 BLOCK: '{' • STATEMENT_LIST '}'

    $default  reduce using rule 4 (STATEMENT_LIST)

    STATEMENT_LIST  go to state 4


State 2

    0 $accept: PROGRAM • $end

    $end  shift, and go to state 5


State 3

    1 PROGRAM: BLOCK •

    $default  reduce using rule 1 (PROGRAM)


State 4

    2 BLOCK: '{' STATEMENT_LIST • '}'
    3 STATEMENT_LIST: STATEMENT_LIST • STATEMENT

    IDENTIFIER  shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    PRINTF      shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    '{'         shift, and go to state 1
    '}'         shift, and go to state 12

    BLOCK            go to state 13
    STATEMENT        go to state 14
    DECLARATION      go to state 15
    TYPE             go to state 16
    ASSIGNMENT       go to state 17
    PRINT            go to state 18
    IF_STATEMENT     go to state 19
    WHILE_STATEMENT  go to state 20
    PRIMITIVE_TYPES  go to state 21


State 5

    0 $accept: PROGRAM $end •

    $default  accept


State 6

   17 ASSIGNMENT: IDENTIFIER • '=' EXPRESSION
   18           | IDENTIFIER • '[' EXPRESSION ']' '=' EXPRESSION

    '='  shift, and go to state 22
    '['  shift, and go to state 23


State 7

   25 PRIMITIVE_TYPES: INT •

    $default  reduce using rule 25 (PRIMITIVE_TYPES)


State 8

   26 PRIMITIVE_TYPES: FLOAT •

    $default  reduce using rule 26 (PRIMITIVE_TYPES)


State 9

   19 PRINT: PRINTF • '(' EXPRESSION ')'

    '('  shift, and go to state 24


State 10

   20 IF_STATEMENT: IF • '(' EXPRESSION ')' BLOCK
   21             | IF • '(' EXPRESSION ')' BLOCK ELSE_CLAUSE

    '('  shift, and go to state 25


State 11

   24 WHILE_STATEMENT: WHILE • '(' EXPRESSION ')' BLOCK

    '('  shift, and go to state 26


State 12

    2 BLOCK: '{' STATEMENT_LIST '}' •

    $default  reduce using rule 2 (BLOCK)


State 13

   10 STATEMENT: BLOCK •

    $default  reduce using rule 10 (STATEMENT)


State 14

    3 STATEMENT_LIST: STATEMENT_LIST STATEMENT •

    $default  reduce using rule 3 (STATEMENT_LIST)


State 15

    5 STATEMENT: DECLARATION • ';'

    ';'  shift, and go to state 27


State 16

   11 DECLARATION: TYPE • IDENTIFIER
   12            | TYPE • IDENTIFIER '=' EXPRESSION

    IDENTIFIER  shift, and go to state 28


State 17

    6 STATEMENT: ASSIGNMENT • ';'

    ';'  shift, and go to state 29


State 18

    7 STATEMENT: PRINT • ';'

    ';'  shift, and go to state 30


State 19

    8 STATEMENT: IF_STATEMENT •

    $default  reduce using rule 8 (STATEMENT)


State 20

    9 STATEMENT: WHILE_STATEMENT •

    $default  reduce using rule 9 (STATEMENT)


State 21

   13 TYPE: PRIMITIVE_TYPES • ARRAY_SPECIFIER

    '['  shift, and go to state 31

    $default  reduce using rule 16 (ARRAY_SPECIFIER)

    ARRAY_SPECIFIER  go to state 32


State 22

   17 ASSIGNMENT: IDENTIFIER '=' • EXPRESSION

    IDENTIFIER     shift, and go to state 33
    NOT_OP         shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    FLOAT_LITERAL  shift, and go to state 36
    '+'            shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    EXPRESSION      go to state 40
    LOGICAL_OR      go to state 41
    LOGICAL_AND     go to state 42
    EQUALITY        go to state 43
    RELATIONAL      go to state 44
    ADDITIVE        go to state 45
    MULTIPLICATIVE  go to state 46
    UNARY           go to state 47
    PRIMARY         go to state 48
    NUMBER          go to state 49


State 23

   18 ASSIGNMENT: IDENTIFIER '[' • EXPRESSION ']' '=' EXPRESSION

    IDENTIFIER     shift, and go to state 33
    NOT_OP         shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    FLOAT_LITERAL  shift, and go to state 36
    '+'            shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    EXPRESSION      go to state 50
    LOGICAL_OR      go to state 41
    LOGICAL_AND     go to state 42
    EQUALITY        go to state 43
    RELATIONAL      go to state 44
    ADDITIVE        go to state 45
    MULTIPLICATIVE  go to state 46
    UNARY           go to state 47
    PRIMARY         go to state 48
    NUMBER          go to state 49


State 24

   19 PRINT: PRINTF '(' • EXPRESSION ')'

    IDENTIFIER     shift, and go to state 33
    NOT_OP         shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    FLOAT_LITERAL  shift, and go to state 36
    '+'            shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    EXPRESSION      go to state 51
    LOGICAL_OR      go to state 41
    LOGICAL_AND     go to state 42
    EQUALITY        go to state 43
    RELATIONAL      go to state 44
    ADDITIVE        go to state 45
    MULTIPLICATIVE  go to state 46
    UNARY           go to state 47
    PRIMARY         go to state 48
    NUMBER          go to state 49


State 25

   20 IF_STATEMENT: IF '(' • EXPRESSION ')' BLOCK
   21             | IF '(' • EXPRESSION ')' BLOCK ELSE_CLAUSE

    IDENTIFIER     shift, and go to state 33
    NOT_OP         shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    FLOAT_LITERAL  shift, and go to state 36
    '+'            shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    EXPRESSION      go to state 52
    LOGICAL_OR      go to state 41
    LOGICAL_AND     go to state 42
    EQUALITY        go to state 43
    RELATIONAL      go to state 44
    ADDITIVE        go to state 45
    MULTIPLICATIVE  go to state 46
    UNARY           go to state 47
    PRIMARY         go to state 48
    NUMBER          go to state 49


State 26

   24 WHILE_STATEMENT: WHILE '(' • EXPRESSION ')' BLOCK

    IDENTIFIER     shift, and go to state 33
    NOT_OP         shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    FLOAT_LITERAL  shift, and go to state 36
    '+'            shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    EXPRESSION      go to state 53
    LOGICAL_OR      go to state 41
    LOGICAL_AND     go to state 42
    EQUALITY        go to state 43
    RELATIONAL      go to state 44
    ADDITIVE        go to state 45
    MULTIPLICATIVE  go to state 46
    UNARY           go to state 47
    PRIMARY         go to state 48
    NUMBER          go to state 49


State 27

    5 STATEMENT: DECLARATION ';' •

    $default  reduce using rule 5 (STATEMENT)


State 28

   11 DECLARATION: TYPE IDENTIFIER •
   12            | TYPE IDENTIFIER • '=' EXPRESSION

    '='  shift, and go to state 54

    $default  reduce using rule 11 (DECLARATION)


State 29

    6 STATEMENT: ASSIGNMENT ';' •

    $default  reduce using rule 6 (STATEMENT)


State 30

    7 STATEMENT: PRINT ';' •

    $default  reduce using rule 7 (STATEMENT)


State 31

   14 ARRAY_SPECIFIER: '[' • ']'
   15                | '[' • EXPRESSION ']'

    IDENTIFIER     shift, and go to state 33
    NOT_OP         shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    FLOAT_LITERAL  shift, and go to state 36
    '+'            shift, and go to state 37
    '-'            shift, and go to state 38
    ']'            shift, and go to state 55
    '('            shift, and go to state 39

    EXPRESSION      go to state 56
    LOGICAL_OR      go to state 41
    LOGICAL_AND     go to state 42
    EQUALITY        go to state 43
    RELATIONAL      go to state 44
    ADDITIVE        go to state 45
    MULTIPLICATIVE  go to state 46
    UNARY           go to state 47
    PRIMARY         go to state 48
    NUMBER          go to state 49


State 32

   13 TYPE: PRIMITIVE_TYPES ARRAY_SPECIFIER •

    $default  reduce using rule 13 (TYPE)


State 33

   51 PRIMARY: IDENTIFIER •
   52        | IDENTIFIER • '[' EXPRESSION ']'

    '['  shift, and go to state 57

    $default  reduce using rule 51 (PRIMARY)


State 34

   49 UNARY: NOT_OP • UNARY

    IDENTIFIER     shift, and go to state 33
    NOT_OP         shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    FLOAT_LITERAL  shift, and go to state 36
    '+'            shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    UNARY    go to state 58
    PRIMARY  go to state 48
    NUMBER   go to state 49


State 35

   55 NUMBER: INT_LITERAL •

    $default  reduce using rule 55 (NUMBER)


State 36

   56 NUMBER: FLOAT_LITERAL •

    $default  reduce using rule 56 (NUMBER)


State 37

   47 UNARY: '+' • UNARY

    IDENTIFIER     shift, and go to state 33
    NOT_OP         shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    FLOAT_LITERAL  shift, and go to state 36
    '+'            shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    UNARY    go to state 59
    PRIMARY  go to state 48
    NUMBER   go to state 49


State 38

   48 UNARY: '-' • UNARY

    IDENTIFIER     shift, and go to state 33
    NOT_OP         shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    FLOAT_LITERAL  shift, and go to state 36
    '+'            shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    UNARY    go to state 60
    PRIMARY  go to state 48
    NUMBER   go to state 49


State 39

   54 PRIMARY: '(' • EXPRESSION ')'

    IDENTIFIER     shift, and go to state 33
    NOT_OP         shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    FLOAT_LITERAL  shift, and go to state 36
    '+'            shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    EXPRESSION      go to state 61
    LOGICAL_OR      go to state 41
    LOGICAL_AND     go to state 42
    EQUALITY        go to state 43
    RELATIONAL      go to state 44
    ADDITIVE        go to state 45
    MULTIPLICATIVE  go to state 46
    UNARY           go to state 47
    PRIMARY         go to state 48
    NUMBER          go to state 49


State 40

   17 ASSIGNMENT: IDENTIFIER '=' EXPRESSION •

    $default  reduce using rule 17 (ASSIGNMENT)


State 41

   27 EXPRESSION: LOGICAL_OR •
   28 LOGICAL_OR: LOGICAL_OR • OR_OP LOGICAL_AND

    OR_OP  shift, and go to state 62

    $default  reduce using rule 27 (EXPRESSION)


State 42

   29 LOGICAL_OR: LOGICAL_AND •
   30 LOGICAL_AND: LOGICAL_AND • AND_OP EQUALITY

    AND_OP  shift, and go to state 63

    $default  reduce using rule 29 (LOGICAL_OR)


State 43

   31 LOGICAL_AND: EQUALITY •
   32 EQUALITY: EQUALITY • EQUAL_EQUAL RELATIONAL
   33         | EQUALITY • NOT_EQUAL RELATIONAL

    EQUAL_EQUAL  shift, and go to state 64
    NOT_EQUAL    shift, and go to state 65

    $default  reduce using rule 31 (LOGICAL_AND)


State 44

   34 EQUALITY: RELATIONAL •
   35 RELATIONAL: RELATIONAL • GREATER ADDITIVE
   36           | RELATIONAL • LESS ADDITIVE
   37           | RELATIONAL • GREATER_EQUAL ADDITIVE
   38           | RELATIONAL • LESS_EQUAL ADDITIVE

    GREATER_EQUAL  shift, and go to state 66
    LESS_EQUAL     shift, and go to state 67
    GREATER        shift, and go to state 68
    LESS           shift, and go to state 69

    $default  reduce using rule 34 (EQUALITY)


State 45

   39 RELATIONAL: ADDITIVE •
   40 ADDITIVE: ADDITIVE • '+' MULTIPLICATIVE
   41         | ADDITIVE • '-' MULTIPLICATIVE

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 39 (RELATIONAL)


State 46

   42 ADDITIVE: MULTIPLICATIVE •
   43 MULTIPLICATIVE: MULTIPLICATIVE • '*' UNARY
   44               | MULTIPLICATIVE • '/' UNARY
   45               | MULTIPLICATIVE • '%' UNARY

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 42 (ADDITIVE)


State 47

   46 MULTIPLICATIVE: UNARY •

    $default  reduce using rule 46 (MULTIPLICATIVE)


State 48

   50 UNARY: PRIMARY •

    $default  reduce using rule 50 (UNARY)


State 49

   53 PRIMARY: NUMBER •

    $default  reduce using rule 53 (PRIMARY)


State 50

   18 ASSIGNMENT: IDENTIFIER '[' EXPRESSION • ']' '=' EXPRESSION

    ']'  shift, and go to state 75


State 51

   19 PRINT: PRINTF '(' EXPRESSION • ')'

    ')'  shift, and go to state 76


State 52

   20 IF_STATEMENT: IF '(' EXPRESSION • ')' BLOCK
   21             | IF '(' EXPRESSION • ')' BLOCK ELSE_CLAUSE

    ')'  shift, and go to state 77


State 53

   24 WHILE_STATEMENT: WHILE '(' EXPRESSION • ')' BLOCK

    ')'  shift, and go to state 78


State 54

   12 DECLARATION: TYPE IDENTIFIER '=' • EXPRESSION

    IDENTIFIER     shift, and go to state 33
    NOT_OP         shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    FLOAT_LITERAL  shift, and go to state 36
    '+'            shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    EXPRESSION      go to state 79
    LOGICAL_OR      go to state 41
    LOGICAL_AND     go to state 42
    EQUALITY        go to state 43
    RELATIONAL      go to state 44
    ADDITIVE        go to state 45
    MULTIPLICATIVE  go to state 46
    UNARY           go to state 47
    PRIMARY         go to state 48
    NUMBER          go to state 49


State 55

   14 ARRAY_SPECIFIER: '[' ']' •

    $default  reduce using rule 14 (ARRAY_SPECIFIER)


State 56

   15 ARRAY_SPECIFIER: '[' EXPRESSION • ']'

    ']'  shift, and go to state 80


State 57

   52 PRIMARY: IDENTIFIER '[' • EXPRESSION ']'

    IDENTIFIER     shift, and go to state 33
    NOT_OP         shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    FLOAT_LITERAL  shift, and go to state 36
    '+'            shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    EXPRESSION      go to state 81
    LOGICAL_OR      go to state 41
    LOGICAL_AND     go to state 42
    EQUALITY        go to state 43
    RELATIONAL      go to state 44
    ADDITIVE        go to state 45
    MULTIPLICATIVE  go to state 46
    UNARY           go to state 47
    PRIMARY         go to state 48
    NUMBER          go to state 49


State 58

   49 UNARY: NOT_OP UNARY •

    $default  reduce using rule 49 (UNARY)


State 59

   47 UNARY: '+' UNARY •

    $default  reduce using rule 47 (UNARY)


State 60

   48 UNARY: '-' UNARY •

    $default  reduce using rule 48 (UNARY)


State 61

   54 PRIMARY: '(' EXPRESSION • ')'

    ')'  shift, and go to state 82


State 62

   28 LOGICAL_OR: LOGICAL_OR OR_OP • LOGICAL_AND

    IDENTIFIER     shift, and go to state 33
    NOT_OP         shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    FLOAT_LITERAL  shift, and go to state 36
    '+'            shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    LOGICAL_AND     go to state 83
    EQUALITY        go to state 43
    RELATIONAL      go to state 44
    ADDITIVE        go to state 45
    MULTIPLICATIVE  go to state 46
    UNARY           go to state 47
    PRIMARY         go to state 48
    NUMBER          go to state 49


State 63

   30 LOGICAL_AND: LOGICAL_AND AND_OP • EQUALITY

    IDENTIFIER     shift, and go to state 33
    NOT_OP         shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    FLOAT_LITERAL  shift, and go to state 36
    '+'            shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    EQUALITY        go to state 84
    RELATIONAL      go to state 44
    ADDITIVE        go to state 45
    MULTIPLICATIVE  go to state 46
    UNARY           go to state 47
    PRIMARY         go to state 48
    NUMBER          go to state 49


State 64

   32 EQUALITY: EQUALITY EQUAL_EQUAL • RELATIONAL

    IDENTIFIER     shift, and go to state 33
    NOT_OP         shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    FLOAT_LITERAL  shift, and go to state 36
    '+'            shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    RELATIONAL      go to state 85
    ADDITIVE        go to state 45
    MULTIPLICATIVE  go to state 46
    UNARY           go to state 47
    PRIMARY         go to state 48
    NUMBER          go to state 49


State 65

   33 EQUALITY: EQUALITY NOT_EQUAL • RELATIONAL

    IDENTIFIER     shift, and go to state 33
    NOT_OP         shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    FLOAT_LITERAL  shift, and go to state 36
    '+'            shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    RELATIONAL      go to state 86
    ADDITIVE        go to state 45
    MULTIPLICATIVE  go to state 46
    UNARY           go to state 47
    PRIMARY         go to state 48
    NUMBER          go to state 49


State 66

   37 RELATIONAL: RELATIONAL GREATER_EQUAL • ADDITIVE

    IDENTIFIER     shift, and go to state 33
    NOT_OP         shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    FLOAT_LITERAL  shift, and go to state 36
    '+'            shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    ADDITIVE        go to state 87
    MULTIPLICATIVE  go to state 46
    UNARY           go to state 47
    PRIMARY         go to state 48
    NUMBER          go to state 49


State 67

   38 RELATIONAL: RELATIONAL LESS_EQUAL • ADDITIVE

    IDENTIFIER     shift, and go to state 33
    NOT_OP         shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    FLOAT_LITERAL  shift, and go to state 36
    '+'            shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    ADDITIVE        go to state 88
    MULTIPLICATIVE  go to state 46
    UNARY           go to state 47
    PRIMARY         go to state 48
    NUMBER          go to state 49


State 68

   35 RELATIONAL: RELATIONAL GREATER • ADDITIVE

    IDENTIFIER     shift, and go to state 33
    NOT_OP         shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    FLOAT_LITERAL  shift, and go to state 36
    '+'            shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    ADDITIVE        go to state 89
    MULTIPLICATIVE  go to state 46
    UNARY           go to state 47
    PRIMARY         go to state 48
    NUMBER          go to state 49


State 69

   36 RELATIONAL: RELATIONAL LESS • ADDITIVE

    IDENTIFIER     shift, and go to state 33
    NOT_OP         shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    FLOAT_LITERAL  shift, and go to state 36
    '+'            shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    ADDITIVE        go to state 90
    MULTIPLICATIVE  go to state 46
    UNARY           go to state 47
    PRIMARY         go to state 48
    NUMBER          go to state 49


State 70

   40 ADDITIVE: ADDITIVE '+' • MULTIPLICATIVE

    IDENTIFIER     shift, and go to state 33
    NOT_OP         shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    FLOAT_LITERAL  shift, and go to state 36
    '+'            shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    MULTIPLICATIVE  go to state 91
    UNARY           go to state 47
    PRIMARY         go to state 48
    NUMBER          go to state 49


State 71

   41 ADDITIVE: ADDITIVE '-' • MULTIPLICATIVE

    IDENTIFIER     shift, and go to state 33
    NOT_OP         shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    FLOAT_LITERAL  shift, and go to state 36
    '+'            shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    MULTIPLICATIVE  go to state 92
    UNARY           go to state 47
    PRIMARY         go to state 48
    NUMBER          go to state 49


State 72

   43 MULTIPLICATIVE: MULTIPLICATIVE '*' • UNARY

    IDENTIFIER     shift, and go to state 33
    NOT_OP         shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    FLOAT_LITERAL  shift, and go to state 36
    '+'            shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    UNARY    go to state 93
    PRIMARY  go to state 48
    NUMBER   go to state 49


State 73

   44 MULTIPLICATIVE: MULTIPLICATIVE '/' • UNARY

    IDENTIFIER     shift, and go to state 33
    NOT_OP         shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    FLOAT_LITERAL  shift, and go to state 36
    '+'            shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    UNARY    go to state 94
    PRIMARY  go to state 48
    NUMBER   go to state 49


State 74

   45 MULTIPLICATIVE: MULTIPLICATIVE '%' • UNARY

    IDENTIFIER     shift, and go to state 33
    NOT_OP         shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    FLOAT_LITERAL  shift, and go to state 36
    '+'            shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    UNARY    go to state 95
    PRIMARY  go to state 48
    NUMBER   go to state 49


State 75

   18 ASSIGNMENT: IDENTIFIER '[' EXPRESSION ']' • '=' EXPRESSION

    '='  shift, and go to state 96


State 76

   19 PRINT: PRINTF '(' EXPRESSION ')' •

    $default  reduce using rule 19 (PRINT)


State 77

   20 IF_STATEMENT: IF '(' EXPRESSION ')' • BLOCK
   21             | IF '(' EXPRESSION ')' • BLOCK ELSE_CLAUSE

    '{'  shift, and go to state 1

    BLOCK  go to state 97


State 78

   24 WHILE_STATEMENT: WHILE '(' EXPRESSION ')' • BLOCK

    '{'  shift, and go to state 1

    BLOCK  go to state 98


State 79

   12 DECLARATION: TYPE IDENTIFIER '=' EXPRESSION •

    $default  reduce using rule 12 (DECLARATION)


State 80

   15 ARRAY_SPECIFIER: '[' EXPRESSION ']' •

    $default  reduce using rule 15 (ARRAY_SPECIFIER)


State 81

   52 PRIMARY: IDENTIFIER '[' EXPRESSION • ']'

    ']'  shift, and go to state 99


State 82

   54 PRIMARY: '(' EXPRESSION ')' •

    $default  reduce using rule 54 (PRIMARY)


State 83

   28 LOGICAL_OR: LOGICAL_OR OR_OP LOGICAL_AND •
   30 LOGICAL_AND: LOGICAL_AND • AND_OP EQUALITY

    AND_OP  shift, and go to state 63

    $default  reduce using rule 28 (LOGICAL_OR)


State 84

   30 LOGICAL_AND: LOGICAL_AND AND_OP EQUALITY •
   32 EQUALITY: EQUALITY • EQUAL_EQUAL RELATIONAL
   33         | EQUALITY • NOT_EQUAL RELATIONAL

    EQUAL_EQUAL  shift, and go to state 64
    NOT_EQUAL    shift, and go to state 65

    $default  reduce using rule 30 (LOGICAL_AND)


State 85

   32 EQUALITY: EQUALITY EQUAL_EQUAL RELATIONAL •
   35 RELATIONAL: RELATIONAL • GREATER ADDITIVE
   36           | RELATIONAL • LESS ADDITIVE
   37           | RELATIONAL • GREATER_EQUAL ADDITIVE
   38           | RELATIONAL • LESS_EQUAL ADDITIVE

    GREATER_EQUAL  shift, and go to state 66
    LESS_EQUAL     shift, and go to state 67
    GREATER        shift, and go to state 68
    LESS           shift, and go to state 69

    $default  reduce using rule 32 (EQUALITY)


State 86

   33 EQUALITY: EQUALITY NOT_EQUAL RELATIONAL •
   35 RELATIONAL: RELATIONAL • GREATER ADDITIVE
   36           | RELATIONAL • LESS ADDITIVE
   37           | RELATIONAL • GREATER_EQUAL ADDITIVE
   38           | RELATIONAL • LESS_EQUAL ADDITIVE

    GREATER_EQUAL  shift, and go to state 66
    LESS_EQUAL     shift, and go to state 67
    GREATER        shift, and go to state 68
    LESS           shift, and go to state 69

    $default  reduce using rule 33 (EQUALITY)


State 87

   37 RELATIONAL: RELATIONAL GREATER_EQUAL ADDITIVE •
   40 ADDITIVE: ADDITIVE • '+' MULTIPLICATIVE
   41         | ADDITIVE • '-' MULTIPLICATIVE

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 37 (RELATIONAL)


State 88

   38 RELATIONAL: RELATIONAL LESS_EQUAL ADDITIVE •
   40 ADDITIVE: ADDITIVE • '+' MULTIPLICATIVE
   41         | ADDITIVE • '-' MULTIPLICATIVE

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 38 (RELATIONAL)


State 89

   35 RELATIONAL: RELATIONAL GREATER ADDITIVE •
   40 ADDITIVE: ADDITIVE • '+' MULTIPLICATIVE
   41         | ADDITIVE • '-' MULTIPLICATIVE

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 35 (RELATIONAL)


State 90

   36 RELATIONAL: RELATIONAL LESS ADDITIVE •
   40 ADDITIVE: ADDITIVE • '+' MULTIPLICATIVE
   41         | ADDITIVE • '-' MULTIPLICATIVE

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 36 (RELATIONAL)


State 91

   40 ADDITIVE: ADDITIVE '+' MULTIPLICATIVE •
   43 MULTIPLICATIVE: MULTIPLICATIVE • '*' UNARY
   44               | MULTIPLICATIVE • '/' UNARY
   45               | MULTIPLICATIVE • '%' UNARY

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 40 (ADDITIVE)


State 92

   41 ADDITIVE: ADDITIVE '-' MULTIPLICATIVE •
   43 MULTIPLICATIVE: MULTIPLICATIVE • '*' UNARY
   44               | MULTIPLICATIVE • '/' UNARY
   45               | MULTIPLICATIVE • '%' UNARY

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 41 (ADDITIVE)


State 93

   43 MULTIPLICATIVE: MULTIPLICATIVE '*' UNARY •

    $default  reduce using rule 43 (MULTIPLICATIVE)


State 94

   44 MULTIPLICATIVE: MULTIPLICATIVE '/' UNARY •

    $default  reduce using rule 44 (MULTIPLICATIVE)


State 95

   45 MULTIPLICATIVE: MULTIPLICATIVE '%' UNARY •

    $default  reduce using rule 45 (MULTIPLICATIVE)


State 96

   18 ASSIGNMENT: IDENTIFIER '[' EXPRESSION ']' '=' • EXPRESSION

    IDENTIFIER     shift, and go to state 33
    NOT_OP         shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    FLOAT_LITERAL  shift, and go to state 36
    '+'            shift, and go to state 37
    '-'            shift, and go to state 38
    '('            shift, and go to state 39

    EXPRESSION      go to state 100
    LOGICAL_OR      go to state 41
    LOGICAL_AND     go to state 42
    EQUALITY        go to state 43
    RELATIONAL      go to state 44
    ADDITIVE        go to state 45
    MULTIPLICATIVE  go to state 46
    UNARY           go to state 47
    PRIMARY         go to state 48
    NUMBER          go to state 49


State 97

   20 IF_STATEMENT: IF '(' EXPRESSION ')' BLOCK •
   21             | IF '(' EXPRESSION ')' BLOCK • ELSE_CLAUSE

    ELSE  shift, and go to state 101

    $default  reduce using rule 20 (IF_STATEMENT)

    ELSE_CLAUSE  go to state 102


State 98

   24 WHILE_STATEMENT: WHILE '(' EXPRESSION ')' BLOCK •

    $default  reduce using rule 24 (WHILE_STATEMENT)


State 99

   52 PRIMARY: IDENTIFIER '[' EXPRESSION ']' •

    $default  reduce using rule 52 (PRIMARY)


State 100

   18 ASSIGNMENT: IDENTIFIER '[' EXPRESSION ']' '=' EXPRESSION •

    $default  reduce using rule 18 (ASSIGNMENT)


State 101

   22 ELSE_CLAUSE: ELSE • BLOCK
   23            | ELSE • IF_STATEMENT

    IF   shift, and go to state 10
    '{'  shift, and go to state 1

    BLOCK         go to state 103
    IF_STATEMENT  go to state 104


State 102

   21 IF_STATEMENT: IF '(' EXPRESSION ')' BLOCK ELSE_CLAUSE •

    $default  reduce using rule 21 (IF_STATEMENT)


State 103

   22 ELSE_CLAUSE: ELSE BLOCK •

    $default  reduce using rule 22 (ELSE_CLAUSE)


State 104

   23 ELSE_CLAUSE: ELSE IF_STATEMENT •

    $default  reduce using rule 23 (ELSE_CLAUSE)
